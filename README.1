Кучи (Heaps):
Куча — это основанная на дереве структура данных, где каждый родительский узел сравнивается со своими дочерними узлами по определённому критерию (например, значение родителя всегда больше или всегда меньше значений потомков). Это свойство обеспечивает эффективный доступ к элементу с наивысшим (или наименьшим) приоритетом.

Основные разновидности куч
1.  Бинарная куча (Binary Heap)
    Структура: Представляет собой полное бинарное дерево, которое удобно хранится в обычном массиве, что позволяет эффективно вычислять позиции родительских и дочерних узлов.
2.  Фибоначчиева куча (Fibonacci Heap)
  Структура: Коллекция нескольких деревьев, поддерживающих свойство кучи. Основное преимущество — амортизированно за время O(1) выполняются такие операции, как вставка и уменьшение ключа, что делает её полезной для некоторых алгоритмов на графах (например, алгоритм Дейкстры).
3.Биномиальная куча (Binomial Heap)
  Структура: Также состоит из набора биномиальных деревьев определённого порядка. Обеспечивает эффективное слияние куч.

Реализация в языках программирования

C++: Стандартная библиотека (`std::priority_queue`) часто реализована на основе бинарной кучи. Требует задания компаратора для определения порядка элементов (min-heap или max-heap).
Java: Класс `PriorityQueue` из framework Collections использует бинарную кучу. Порядок элементов задаётся с помощью интерфейса `Comparator`.
Python: Модуль `heapq` предоставляет функции для работы со списком как с бинарной min-heap.

Хэш-таблицы
Хэш-таблица — это структура данных для хранения пар «ключ–значение», которая использует хэш-функцию для преобразования ключа в индекс массива (бакета), что в среднем позволяет выполнять операции добавления, поиска и удаления за константное время O(1). Для разрешения коллизий (когда разные ключи дают одинаковый индекс) применяются методы цепочек или открытой адресации.

Реализации в разных языках:
C++: `std::unordered_map`
Java: `HashMap<K, V>`
Python: Встроенный тип `dict`


